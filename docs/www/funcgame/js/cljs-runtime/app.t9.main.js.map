{"version":3,"sources":["app/t9/main.cljs"],"mappings":"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","names":["app.t9.main/train","atomModel","atomOption","seq1","cljs.core.range.cljs$core$IFn$_invoke$arity$0","p1__35115#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/mod","seq2","p1__35116#","p1__35117#","seq3","p1__35118#","c__25042__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__25043__auto__","switch__25019__auto__","state_35216","state_val_35217","inst_35179","inst_35183","inst_35174","inst_35178","inst_35184","inst_35173","inst_35207","inst_35208","inst_35209","inst_35210","inst_35211","inst_35156","inst_35157","inst_35158","inst_35159","statearr-35218","statearr-35219","inst_35140","cljs.core/deref","inst_35141","cljs.core/seq","inst_35142","cljs.core/first","inst_35143","cljs.core/next","inst_35144","inst_35145","inst_35146","inst_35147","inst_35148","inst_35149","inst_35150","inst_35151","inst_35152","inst_35153","inst_35154","inst_35155","statearr-35220","statearr-35221","inst_35188","inst_35187","inst_35189","inst_35190","statearr-35222","statearr-35223","statearr-35224","inst_35203","statearr-35225","inst_35194","inst_35195","statearr-35226","statearr-35227","inst_35214","cljs.core.async.impl.ioc-helpers/return-chan","statearr-35228","inst_35170","inst_35171","inst_35172","inst_35175","inst_35176","inst_35177","inst_35180","inst_35181","inst_35182","inst_35185","statearr-35229","cljs.core.async.impl.ioc-helpers/take!","inst_35200","statearr-35230","statearr-35231","inst_35192","statearr-35233","inst_35205","statearr-35234","inst_35197","statearr-35235","statearr-35236","state-machine__25020__auto__","ret-value__25021__auto__","result__25022__auto__","cljs.core/keyword-identical?","e35237","js/Object","ex__25023__auto__","statearr-35238","cljs.core.async.impl.ioc-helpers/process-exception","state__25044__auto__","statearr-35239","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async/timeout","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","app.t9.qlearning/learn","cljs.core/reset!","cljs.core/cons","app.t9.main/predic","state","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","render","s","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","origin","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","state_35253","state_val_35254","statearr-35255","inst_35241","inst_35242","inst_35243","inst_35244","inst_35245","inst_35246","statearr-35256","inst_35251","inst_35248","statearr-35257","statearr-35258","statearr-35259","e35260","statearr-35261","statearr-35262","qmodel","cljs.core.reductions.cljs$core$IFn$_invoke$arity$3","c","_","app.t9.qlearning/bestAction","cljs.core.range.cljs$core$IFn$_invoke$arity$2","cljs.core.range.cljs$core$IFn$_invoke$arity$1","reagent.core.render.cljs$core$IFn$_invoke$arity$2","js/document","app.t9.main/main","option","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","app.t9.qlearning/model","state_35267","state_val_35268","inst_35263","inst_35265","statearr-35269","e35270","statearr-35271","statearr-35272"],"sourcesContent":["(ns app.t9.main\r\n  (:require [clojure.core.async :as a]\r\n            [reagent.core :as r])\r\n  (:require [app.t9.qlearning :as q]))\r\n\r\n(defn train [atomModel atomOption]\r\n  (let [seq1 (->> (range) (map #(mod % 10)))\r\n        seq2 (->> (range) (map #(mod % 10)) (map #(- 9 %)))\r\n        seq3 (->> (range) (map #(mod % 5)))]\r\n    (a/go\r\n      (loop [qmodel @atomModel\r\n             [x y & s] seq1\r\n             [x2 y2 & s2] seq2\r\n             [x3 y3 & s3] seq3]\r\n        (a/<! (a/timeout 250))\r\n        (let [option @atomOption\r\n              qmodel (cond\r\n                       (= :seq1 (:select option))\r\n                       ; qlearning\u53ef\u4ee5\u7528\u4f86\u9810\u6e2c\u6a21\u5f0f, x\u900f\u904e\"\u8b8a\u6210y\u7684action\"\u8b8a\u6210y\r\n                       ; \u4e4b\u5f8c\u518d\u9047\u5230x\u6642, \u5c31\u53ef\u4ee5\u77e5\u9053\u6709\u53ef\u80fd\u8b8a\u6210y\r\n                       (q/learn qmodel x y 1 y)\r\n                       \r\n                       (= :seq2 (:select option))\r\n                       (q/learn qmodel x2 y2 1 y2)\r\n                       \r\n                       :else\r\n                       (q/learn qmodel x3 y3 1 y3))]\r\n          (reset! atomModel qmodel)\r\n          (recur qmodel (cons y s) (cons y2 s2) (cons y3 s3)))))))\r\n\r\n\r\n(defn predic [atomModel atomOption] \r\n  (let [state (r/atom nil)\r\n        render (fn []\r\n                 (let [s @state]\r\n                   [:div\r\n                    (str \"qlearning\u53ef\u4ee5\u7528\u4f86\u9810\u6e2c\u6a21\u5f0f, x\u900f\u904e'\u8b8a\u6210y\u7684action'\u8b8a\u6210y\"\r\n                         \"\u4e4b\u5f8c\u518d\u9047\u5230x\u6642, \u5c31\u53ef\u4ee5\u77e5\u9053\u6709\u53ef\u80fd\u8b8a\u6210y\")\r\n                    [:br]\r\n                    (str \"\u5f9e\u6578\u5b573\u958b\u59cb\u9810\u6e2c\")\r\n                    [:br]\r\n                    (str \"seq1\" [0 1 2 3 4 5 6 7 8 9])\r\n                    [:br]\r\n                    (str \"seq2\" [9 8 7 6 5 4 3 2 1 0])\r\n                    [:br]\r\n                    (str \"seq3\" [0 1 2 3 4 0 1 2 3 4])\r\n                    [:br]\r\n                    [:div\r\n                     [:button {:on-click #(swap! atomOption (fn [origin] (assoc origin :select :seq1)))} \"seq1\"]\r\n                     [:button {:on-click #(swap! atomOption (fn [origin] (assoc origin :select :seq2)))} \"seq2\"]\r\n                     [:button {:on-click #(swap! atomOption (fn [origin] (assoc origin :select :seq3)))} \"seq3\"]]\r\n                    (str \"select \" (:select @atomOption))\r\n                    [:div (str \"[\" s \"]\")]]))]\r\n    (a/go\r\n      (loop []\r\n        (let [qmodel @atomModel\r\n              r (reductions (fn [c _]\r\n                              (q/bestAction qmodel c (range 0 10)))\r\n                            3\r\n                            (range 10))]\r\n          (reset! state r)\r\n          (a/<! (a/timeout 1000))\r\n          (recur))))\r\n\r\n    (r/render [render]\r\n              (.getElementById js/document \"playground\"))))\r\n\r\n\r\n(defn main []\r\n  (let [option (atom {:select :seq1})\r\n        qmodel (atom (merge q/model {:learningRate 0.5\r\n                                     :discountFactor 0.9}))\r\n        _ (a/go (a/<! (train qmodel option)))\r\n        _ (predic qmodel option)\r\n        ]))\r\n \r\n(main)"]}