{"version":3,"sources":["app3/system/weaponSys.cljs"],"mappings":"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","names":["model","event","pred__36193","cljs.core/=","expr__36194","cljs.core/first","G__36196","G__36197","vec__36198","cljs.core/rest","players","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","app3.tool/checkProperty","enemies","others","collides","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__36201","vec__36202","_","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","isCollide","iter__4523__auto__","s__36206","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","xs__6292__auto__","o1","iterys__4519__auto__","s__36208","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__36210","cljs.core/chunk-buffer","i__36209","o2","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","app3.tool/checkCollide","cljs.core/chunk-cons","cljs.core/chunk","iter__36207","cljs.core/chunk-rest","cljs.core/cons","fs__4520__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","iter__36205","vec__36217","plyr","other","app3.emitter/send","fexpr__36221","cljs.core.update.cljs$core$IFn$_invoke$arity$3","origin","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core/not","cljs.core.replace.cljs$core$IFn$_invoke$arity$2","fexpr__36225","app3.system.weaponSys/playerCollideWeapon","weapon","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","pred__36235","expr__36236","G__36240","G__36241","vec__36246","app3.system.weaponSys/tickWeapon","plyrs","hasWeapon","next","e","app3.interface.weapon/tick","cljs.core/replace","cljs.core/zipmap","pred__36276","expr__36277","G__36279","G__36280","vec__36281","app3.system.weaponSys/fireBullet","isFireSuccess","target","bullets","app3.interface.weapon/createBullet","cljs.core/concat","pred__36284","expr__36285","G__36287","G__36288","vec__36289","app3.system.weaponSys/spawnWeapon","what","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","weapons","newW","cljs.core.rand.cljs$core$IFn$_invoke$arity$0","app3.weapon.gun/gun","app3.weapon.meleeGun/meleeGun","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core/rand-int","cljs.core/chunk-first"],"sourcesContent":["(ns app3.system.weaponSys\r\n  (:require-macros [app3.macros :as m])\r\n  (:require [app3.interface.weapon]\r\n            [app3.weapon.gun :refer [gun]]\r\n            [app3.weapon.meleeGun :refer [meleeGun]]))\r\n\r\n(m/defPlayerCollide playerCollideWeapon :weapon \r\n  (fn [plyr weapon]\r\n    (-> plyr\r\n        (assoc :useWeapon weapon)\r\n        (assoc :action (clojure.set/difference (:action plyr) #{:seekWeapon})))))\r\n\r\n\r\n(m/defsys tickWeapon\r\n  :update []\r\n  (m/lete [plyrs [:player]\r\n           enemies [:enemy]]\r\n    (let [hasWeapon (filter :useWeapon (concat plyrs enemies))\r\n          next (map (fn [e] (update e :useWeapon app3.interface.weapon/tick)) hasWeapon)]\r\n      (update model :entities (partial replace (zipmap hasWeapon next))))))\r\n\r\n\r\n(m/defsys fireBullet\r\n  :fire [plyr weapon isFireSuccess target]\r\n  (let [bullets (if isFireSuccess\r\n                  (app3.interface.weapon/createBullet weapon plyr target)\r\n                  [])]\r\n    (update model :entities (partial concat bullets))))\r\n\r\n\r\n(m/defsys spawnWeapon\r\n  :spawn [what]\r\n  (if (= :weapon what)\r\n    (m/lete [weapons [:weapon]]\r\n      (if (< (count weapons) 2)\r\n        (let [newW (-> (rand)\r\n                       (< 0.5)\r\n                       (if gun meleeGun))]\r\n          (update model :entities (partial cons (merge newW {:position [(rand-int 600) (rand-int 600)]}))))\r\n        model))\r\n    model))"]}