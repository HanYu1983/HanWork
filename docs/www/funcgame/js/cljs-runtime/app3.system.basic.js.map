{"version":3,"sources":["app3/system/basic.cljs"],"mappings":"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","names":["model","event","pred__36027","cljs.core/=","expr__36028","cljs.core/first","G__36030","G__36031","vec__36033","cljs.core/rest","app3.system.basic/moveSystem","entities","origin","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","app3.tool/checkProperty","next","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__36045","map__36046","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","entity","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core/replace","cljs.core/zipmap","_","vel","cljs.core.partial.cljs$core$IFn$_invoke$arity$3","cljs.core/map","cljs.core/+","app3.system.basic/boundPosition","p__36049","map__36050","vec__36051","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","x","y","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","x__4219__auto__","y__4220__auto__","x__4222__auto__","y__4223__auto__","app3.system.basic/resetPlayerVelocity","p__36059","map__36060","_2","app3.system.basic/resetEnemyVelocity","p__36065","map__36066","pred__36070","expr__36071","G__36073","G__36074","vec__36076","app3.system.basic/moveCostSystem","p__36079","map__36080","hp","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","len","app3.tool/length","app3.emitter/send","pred__36095","expr__36096","G__36098","G__36099","vec__36100","app3.system.basic/dieSystem","p__36125","map__36127","app3.weapon.fist/fist","pred__36134","expr__36135","G__36137","G__36138","vec__36139","G__36142","G__36143","vec__36144","app3.system.basic/roundSystem","cljs.core/inc","isPlayer","tag","plyr","enemy","nextPlyr","nextEnemy","cljs.core/constantly"],"sourcesContent":["(ns app3.system.basic\n  (:require [app3.weapon.fist])\n  (:require-macros [app3.macros :as m]))\n\n\n(m/defsys moveSystem\n  :update []\n  (m/docom {_ :position vel :velocity}\n           (update entity :position (partial map + vel))))\n\n\n(defn boundPosition [model entity]\n  (m/docom {[x y] :position}\n           (merge entity {:position [(-> x (max 0) (min 600)) (-> y (max 0) (min 600))]})))\n\n\n(defn resetPlayerVelocity [model entity]\n  (m/docom {_ :player _2 :velocity}\n           (merge entity {:velocity [0 0]})))\n\n\n(defn resetEnemyVelocity [model entity]\n  (m/docom {_ :enemy _2 :velocity}\n           (merge entity {:velocity [0 0]})))\n\n\n(m/defsys moveCostSystem\n  :update []\n  (m/docom {vel :velocity hp :hp}\n           (if (not (= [0 0] vel))\n             (let [len (app3.tool/length vel)]\n               (app3.emitter/send [:moveCost entity len] nil)\n               (merge entity {:hp (max 0 (- hp (/ len 10)))}))\n             entity)))\n\n\n(m/defsys dieSystem\n  :update []\n  (m/docom {hp :hp}\n           (if (<= hp 0)\n             (do \n               (app3.emitter/send [:died entity] nil)\n               (merge entity {:hp 100 :useWeapon app3.weapon.fist/fist}))\n             entity)))\n\n\n(m/defsys roundSystem\n  :update []\n  (update model :ticks inc)\n  \n  :died [entity]\n  (let [isPlayer (:player entity)\n        tag (if isPlayer :enemyWin :playerWin)\n        plyr (first (filter :player (:entities model)))\n        enemy (first (filter :enemy (:entities model)))\n        nextPlyr (merge plyr {:hp 100 :position [50 300]})\n        nextEnemy (merge enemy {:hp 100 :position [550 300]})]\n    (-> model\n        (update :ticks (constantly 0))\n        (update tag inc)\n        (update :round inc)\n        (update :entities (partial replace {plyr nextPlyr enemy nextEnemy})))))"]}