{"version":3,"sources":["app3/system/action.cljs"],"mappings":"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","names":["model","event","pred__36351","cljs.core/=","expr__36352","cljs.core/first","G__36354","G__36355","vec__36356","cljs.core/rest","app3.system.action/actionController","entities","origin","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","app3.tool/checkProperty","next","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p__36359","map__36360","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","entity","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core/replace","cljs.core/zipmap","pos","vel","action","G__36362","cljs.core/some","cljs.core/contains?","fexpr__36364","v","G__36370","cljs.core.map.cljs$core$IFn$_invoke$arity$3","cljs.core/+","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","fexpr__36374","self","target","app3.interface.player/target","dir","app3.tool/seek","app3.tool/makeLength","app3.tool/length","fexpr__36386","fexpr__36390","weapon","nextWeapon","app3.interface.weapon/fire","isFireSuccess","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","app3.emitter/send","fexpr__36397","weapons","seekWeapon","clojure.set.difference.cljs$core$IFn$_invoke$arity$2","fexpr__36408","healing","seekHealing"],"sourcesContent":["(ns app3.system.action\r\n  (:require-macros [app3.macros :as m])\r\n  (:require [app3.emitter :refer [send]]\r\n            [app3.interface.player]\r\n            [app3.interface.weapon]))\r\n\r\n(m/defsys actionController\r\n  :update []\r\n  (m/docom {pos :position vel :velocity action :action}\r\n    (cond-> entity\r\n            (some (partial contains? action) [:up :left :down :right])\r\n            ((fn [entity]\r\n               (let [v (cond->> [0 0]\r\n                                (contains? action :up) (map + [0 -10])\r\n                                (contains? action :left) (map + [-10 0])\r\n                                (contains? action :down) (map + [0 10])\r\n                                (contains? action :right) (map + [10 0]))]\r\n                 (merge entity {:velocity v}))))\r\n            \r\n            (contains? action :seek)\r\n            ((fn [entity] \r\n               (let [self entity\r\n                     target (app3.interface.player/target nil model self)]\r\n                 (let [dir (app3.tool/seek (:position self) (:position target))\r\n                       vel (app3.tool/makeLength 3 dir)]\r\n                   (if (< (app3.tool/length dir) 50)\r\n                     self\r\n                     (merge self {:velocity vel}))))))\r\n            \r\n            (contains? action :evade)\r\n            ((fn [entity]\r\n               (let [self entity\r\n                     target (app3.interface.player/target nil model self)]\r\n                 (let [dir (app3.tool/seek (:position target) (:position self))\r\n                       vel (app3.tool/makeLength 5 dir)]\r\n                   (merge self {:velocity vel})))))\r\n            \r\n            (contains? action :fire)\r\n            ((fn [entity]\r\n               (let [self entity\r\n                     weapon (:useWeapon self)]\r\n                 (if weapon\r\n                   (let [nextWeapon (app3.interface.weapon/fire weapon)\r\n                         isFireSuccess (not (= weapon nextWeapon))\r\n                         target (app3.interface.player/target nil model self)]\r\n                     (send [:fire self weapon isFireSuccess target] nil)\r\n                     (merge self {:useWeapon nextWeapon}))\r\n                   self))))\r\n            \r\n            (contains? action :seekWeapon)\r\n            ((fn [entity]\r\n               (let [weapons (filter (partial app3.tool/checkProperty [:position :weapon]) (:entities model))\r\n                     seekWeapon (first weapons)]\r\n                 (if seekWeapon\r\n                   (let [dir (app3.tool/seek pos (:position seekWeapon))\r\n                         vel (app3.tool/makeLength 5 dir)]\r\n                     (merge entity {:velocity vel}))\r\n                   (merge entity {:action (clojure.set/difference action #{:seekWeapon})})))))\r\n            \r\n            (contains? action :seekHealing)\r\n            ((fn [entity]\r\n               (let [healing (filter (partial app3.tool/checkProperty [:position :healing]) (:entities model))\r\n                     seekHealing (first healing)]\r\n                 (if seekHealing\r\n                   (let [dir (app3.tool/seek pos (:position seekHealing))\r\n                         vel (app3.tool/makeLength 5 dir)]\r\n                     (merge entity {:velocity vel}))\r\n                   (merge entity {:action (clojure.set/difference action #{:seekHealing})}))))))))\r\n"]}